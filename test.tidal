setI "cc1" $ (cI 1 "21")

d1 $ slow 2  $ n "^cc1" #  s "supersaw supersquare"

d1 $ sound "bd" # amp (cF 1 "21")

-- d3 $ n (run 8) # s "midi"

d1 $ sound "amencutup" + n (run (segment 1 $ range 1 16 $ cN 1 "48" ))

d2 $ slow (cR 1 "21") $ sound "amencutup" # room (cF 10 "22") # sz (cF 1 "23")


d1 $ stack [
  sound "bd bd*2",
  sound "hh*2 [sn cp] cp future*4",
  sound "arpy" +| n "0 .. 15"
]


d1 $ whenmod 5 3 (striate 3) $ stack [
  sound "bd bd*2",
  sound "hh*2 [sn cp] cp future*4",
  sound "arpy" +| n "0 .. 15"
] # speed "[[1 0.8], [1.5 2]*2]/3"

d1 $ superimpose (fast 4) $ sound "bd sn [cp ht] hh"

d1 $ layer [rev, fast 2] $ sound "arpy [~ arpy:4]"

d1 $ s (steps [("hc","x  x x  x x  x"),("bd", "xx xx")])

d1 $ jux (striate 4) $ s (steps [("bd", "x x xx x")]) # n (run 8)
  # bandf (range 0 1200 $ (sine))
  # bandq (1-(sine * rand))
  -- # hpq (cF 1 "22")
  # djf sine
  # orbit 2

d2 $


let pats =
      [
        ("a", stack [n "c4 c5 g4 f4 f5 g4 e5 g4" # s "superpiano" # gain "0.7",
                     n "[c3,g4,c4]" # s "superpiano"# gain "0.7"
                    ]
        ),
        ("b", stack [n "d4 c5 g4 f4 f5 g4 e5 g4" # s "superpiano" # gain "0.7",
                     n "[d3,a4,d4]" # s "superpiano"# gain "0.7"
                    ]
        ),
        ("c", stack [n "f4 c5 g4 f4 f5 g4 e5 g4" # s "superpiano" # gain "0.7",
                     n "[f4,c5,f4]" # s "superpiano"# gain "0.7"
                    ]
        ),
        ("d", s "hoarder:1")
      ]
    fx = [("reverb", (# (room 0.8 # sz 0.99 # orbit 1))),
          ("faster", fast 2),
          ("slower", slow 4)
          ]
in
d1 $ ur 12 "a b:reverb c:faster d:slower" pats fx


let pats = [("drums", s "drum cp*2"),
            ("melody", s "arpy:2 arpy:3 arpy:5"),
            ("craziness", s "cp:4*8" # speed ( sine + 0.5))
           ]
    fx = [("higher", (# speed 2))]
in
d1 $ ur 8 "[drums, melody] [drums,craziness,melody] melody:higher" pats fx

d1 $ qtrigger 1 $ seqPLoop [
  (0, 12, sound "bd bd*2"),
  (4, 12, sound "hh*2 [sn cp] cp future*4"),
  (8, 12, sound (samples "arpy*8" (run 16))),
]

d1 $ fast 2 $ sound "bd sd"

anticipateIn 2 2 $ fast 4 $ sound "hh*2" *| gain "0.9 0.6"

d2 silence

d1 $ sound "bd(3,8)"

clutch 1 $ sound "[hh*4, odx(3,8)]"

d1 $ n "0 7 ~ 2" +| sound "arpy*16" # cutoff 2000

interpolate 1 $ sound "arpy*16" # cutoff 16000

d2 $ sound "[Bass_Drums([2 3],8)@, Hats*4]" # n (run 3) # speed (range 1 2 $ sine * perlin) # gain 0.9

xfade 2 $ loopAt 2 $ slow 4 $ s "PercLoops" # n "0"

d2 silence

d1 $ jux rev $ fast 2 $ n (run 100) # s "<AKWF_0001 AKWF_0002 AKWF_0003 AKWF_0004>" # gain 0.5

d1 $ jux rev $ slow 2 $ n "2*16!3 4 [8 1]? 3 ~?" # s "<AKWF_0001 AKWF_0002 AKWF_0003 AKWF_0004>"
  -- # room 0.5 # sz (cF 0 "21")
  -- # hpf (range 100 800 (sine))
  -- # fshift (range 500 50 sine)
  -- |+ squiz "2 4 8"
  -- # delay 0.5
  # gain 0.5

d1 silence

d3 $ striate 16 $ slow "<2 4>" $ n (run 3) # s "pad" # gain "^22" # speed "^23" # cut 1

d1 $ sound "can bd hh*5 bd" # up "{1 2 3 4}/4"

unmute 1
--
d13 $ s "readorb:0"
  # squiz 20
  # pF "obus" 8

d5 $ sound "[readorb:0, readorb:1, readorb:2]"
  -- # pan "1" # orbit "1"
  # room 1 # sz 0.5
  # delay "1 0.5" # delaytime "0.15" # delayfeedback "0.5"
  # bandf "{90 200 1450 9000}/3" # bandq "10"
  -- # squiz sine

d6 $ sound "readorb:4"
  # crush 20
  # hpf 1000 # hpq 1

d1 $ sound "can*2" pan "0" # up "{1 2 3 4}/4"

d1
    $ mask "t(3,8)"
    $ s "[sd bd](<3 2 5>,16,[0,1,3])"
    +| n (run 50)

let ph = pF "ph"

d1 $ jux rev 
  $ chunk 4 (slow 2 . (|- n 12)) 
  $ off 0.25 (|+ 7) 
  $ struct (iter 4 "t(3,8)") 
  $ n (scale "minPent" "0 .. -7") 
  # sound "bass8"
  # ph sine
